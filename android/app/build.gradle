plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services' // Plugin for Google services
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.login_ui" // Make sure this matches your app's package
    compileSdkVersion 34  // Set this to 34

    ndkVersion "25.2.9519653"  // You can keep this or update based on your environment

    defaultConfig {
        applicationId "com.example.login_ui"
        minSdkVersion 23
        targetSdkVersion 34  
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Consider adding your own signing config
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.4.0') // Firebase BOM for version management
    implementation 'com.google.firebase:firebase-analytics' // Firebase Analytics
    implementation 'com.google.firebase:firebase-auth' // Firebase Auth
    implementation 'com.google.firebase:firebase-firestore' // Firebase Firestore
    implementation 'com.android.support:multidex:2.0.1'
}

apply plugin: 'com.google.gms.google-services' // Apply Google services plugin at the end
